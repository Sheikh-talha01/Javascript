
class Animal {
    // ... class code here ...
}



// the Cat sub-class, like this:
class Cat extends Animal {
    // ... class code here ...
}



// For Example
class Animal {
    // constructor: color, energy
    // isActive()
        // if energy > 0, energy -=20, console log energy
        // else if energy <= 0, sleep()
    // sleep()
        // energy += 20
        // console.log energy
}
class Cat extends Animal {
    // constructor: sound, canJumpHigh, canClimbTrees, color, energy
    // makeSound()
        // console.log sound
}
class Bird extends Animal {
    // constructor: sound, canFly, color, energy
    // makeSound()
        // console.log sound
}
class HouseCat extends Cat {
    // constructor: houseCatSound, sound, canJumpHigh, canClimbTrees, color, energy
    // makeSound(option)
        // if (option)
            // super.makeSound()
        // console.log(houseCatSound)
}
class Tiger extends Cat {
    // constructor: tigerSound, sound, canJumpHigh, canClimbTrees, color, energy
    // makeSound(option)
        // if (option)
            // super.makeSound()
        // console.log(tigerSound)
}
class Parrot extends Bird {
    // constructor: canTalk, sound, canJumpHigh, canClimbTrees, color, energy
    // makeSound(option)
        // if (option)
            // super.makeSound()
        // if (canTalk)
            // console.log("talking!")
}



//                        Example

/* Lab Tasks: 

Task 1: Code a Person Class
Objective: Create a Person class to represent basic human attributes and actions.
Steps:
Step 1: Open the ooprogramming.js file present under the LEARN folder. This is where you will write your object-oriented program. 
Step 2: Define a Person class with the following parameters in the constructor:
name (default: "Tom")
age (default: 20)  
energy (default: 100)
Step 3: Add the following methods to the class:
sleep(): Increases the energy property by 10.
doSomethingFun(): Decreases the energy property by 10.  
*/

